//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuIDE.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuIDE.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die QuIDE - Quantum Integrated Development Environment
        ///Version: 1.0.0
        ///© 2014 Joanna Patrzyk, Bartłomiej Patrzyk ähnelt.
        /// </summary>
        public static string AboutText {
            get {
                return ResourceManager.GetString("AboutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Absolute ähnelt.
        /// </summary>
        public static string Absolute {
            get {
                return ResourceManager.GetString("Absolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Control Bit ähnelt.
        /// </summary>
        public static string AddControl {
            get {
                return ResourceManager.GetString("AddControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Parameter ähnelt.
        /// </summary>
        public static string AddParam {
            get {
                return ResourceManager.GetString("AddParam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Qubit to Register ähnelt.
        /// </summary>
        public static string AddQubit {
            get {
                return ResourceManager.GetString("AddQubit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add New Register ähnelt.
        /// </summary>
        public static string AddRegister {
            get {
                return ResourceManager.GetString("AddRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Step ähnelt.
        /// </summary>
        public static string AddStep {
            get {
                return ResourceManager.GetString("AddStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Amplitude ähnelt.
        /// </summary>
        public static string Amplitude {
            get {
                return ResourceManager.GetString("Amplitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If amplitudes are not normalized (probabilities of possible states do not sum up to 1), they will be automatically normalized before register creation. ähnelt.
        /// </summary>
        public static string AmplitudesNormalizationCaution {
            get {
                return ResourceManager.GetString("AmplitudesNormalizationCaution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Angle Value : ähnelt.
        /// </summary>
        public static string AngleValue {
            get {
                return ResourceManager.GetString("AngleValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply ähnelt.
        /// </summary>
        public static string Apply {
            get {
                return ResourceManager.GetString("Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authors:
        ///Joanna Patrzyk (jpatrzyk@quide.eu)
        ///Bartłomiej Patrzyk (bpatrzyk@quide.eu) ähnelt.
        /// </summary>
        public static string Authors {
            get {
                return ResourceManager.GetString("Authors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculator ähnelt.
        /// </summary>
        public static string Calculator {
            get {
                return ResourceManager.GetString("Calculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Circuit Designer ähnelt.
        /// </summary>
        public static string CircuitDesigner {
            get {
                return ResourceManager.GetString("CircuitDesigner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear ähnelt.
        /// </summary>
        public static string ClearAll {
            get {
                return ResourceManager.GetString("ClearAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Circuit ähnelt.
        /// </summary>
        public static string ClearCircuit {
            get {
                return ResourceManager.GetString("ClearCircuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear Selection [Delete] ähnelt.
        /// </summary>
        public static string ClearSelection {
            get {
                return ResourceManager.GetString("ClearSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Composite Gate ähnelt.
        /// </summary>
        public static string Composite {
            get {
                return ResourceManager.GetString("Composite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Console Output ähnelt.
        /// </summary>
        public static string ConsoleOutput {
            get {
                return ResourceManager.GetString("ConsoleOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy [Ctrl+C] ähnelt.
        /// </summary>
        public static string Copy {
            get {
                return ResourceManager.GetString("Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy Result ähnelt.
        /// </summary>
        public static string CopyResult {
            get {
                return ResourceManager.GetString("CopyResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conditional Phase Kick (Phase Shift) Gate For QFT ähnelt.
        /// </summary>
        public static string CPhaseShift {
            get {
                return ResourceManager.GetString("CPhaseShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cut [Ctrl+X] ähnelt.
        /// </summary>
        public static string Cut {
            get {
                return ResourceManager.GetString("Cut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Column ähnelt.
        /// </summary>
        public static string DeleteColumn {
            get {
                return ResourceManager.GetString("DeleteColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Qubit ähnelt.
        /// </summary>
        public static string DeleteQubit {
            get {
                return ResourceManager.GetString("DeleteQubit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Register ähnelt.
        /// </summary>
        public static string DeleteRegister {
            get {
                return ResourceManager.GetString("DeleteRegister", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete Row ähnelt.
        /// </summary>
        public static string DeleteRow {
            get {
                return ResourceManager.GetString("DeleteRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase Distance Value (k) : ähnelt.
        /// </summary>
        public static string DistValue {
            get {
                return ResourceManager.GetString("DistValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drag and Drop selected gates ähnelt.
        /// </summary>
        public static string DragGates {
            get {
                return ResourceManager.GetString("DragGates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit... ähnelt.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter Name for the new Composite Gate : ähnelt.
        /// </summary>
        public static string EnterName {
            get {
                return ResourceManager.GetString("EnterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Erase Gate ähnelt.
        /// </summary>
        public static string EraseGate {
            get {
                return ResourceManager.GetString("EraseGate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flip Bit ähnelt.
        /// </summary>
        public static string FlipBit {
            get {
                return ResourceManager.GetString("FlipBit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate Code From Circuit ähnelt.
        /// </summary>
        public static string GenerateCode {
            get {
                return ResourceManager.GetString("GenerateCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate Circuit From Code ähnelt.
        /// </summary>
        public static string GenerateFromCode {
            get {
                return ResourceManager.GetString("GenerateFromCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///to take away your freedom to share  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string GPLText {
            get {
                return ResourceManager.GetString("GPLText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group ähnelt.
        /// </summary>
        public static string Group {
            get {
                return ResourceManager.GetString("Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create Composite Gate from selected gates ähnelt.
        /// </summary>
        public static string GroupTip {
            get {
                return ResourceManager.GetString("GroupTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hadamard Gate ähnelt.
        /// </summary>
        public static string Hadamard {
            get {
                return ResourceManager.GetString("Hadamard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run In Console ähnelt.
        /// </summary>
        public static string InConsole {
            get {
                return ResourceManager.GetString("InConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial register state: ähnelt.
        /// </summary>
        public static string InitState {
            get {
                return ResourceManager.GetString("InitState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial register value ähnelt.
        /// </summary>
        public static string InitValue {
            get {
                return ResourceManager.GetString("InitValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Column on the Left ähnelt.
        /// </summary>
        public static string InsertColumnLeft {
            get {
                return ResourceManager.GetString("InsertColumnLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Column on the Right ähnelt.
        /// </summary>
        public static string InsertColumnRight {
            get {
                return ResourceManager.GetString("InsertColumnRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Qubit Above ähnelt.
        /// </summary>
        public static string InsertQubitAbove {
            get {
                return ResourceManager.GetString("InsertQubitAbove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Qubit Below ähnelt.
        /// </summary>
        public static string InsertQubitBelow {
            get {
                return ResourceManager.GetString("InsertQubitBelow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Register Above ähnelt.
        /// </summary>
        public static string InsertRegisterAbove {
            get {
                return ResourceManager.GetString("InsertRegisterAbove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Register Below ähnelt.
        /// </summary>
        public static string InsertRegisterBelow {
            get {
                return ResourceManager.GetString("InsertRegisterBelow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Row Above ähnelt.
        /// </summary>
        public static string InsertRowAbove {
            get {
                return ResourceManager.GetString("InsertRowAbove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert Row Below ähnelt.
        /// </summary>
        public static string InsertRowBelow {
            get {
                return ResourceManager.GetString("InsertRowBelow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inversed Conditional Phase Kick (Phase Shift) Gate For QFT ähnelt.
        /// </summary>
        public static string InvCPhaseShift {
            get {
                return ResourceManager.GetString("InvCPhaseShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die QuIDE is available under the GNU General Public License: ähnelt.
        /// </summary>
        public static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The matrix is not unitary. ähnelt.
        /// </summary>
        public static string MatrixNotUnitary {
            get {
                return ResourceManager.GetString("MatrixNotUnitary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Measurement ähnelt.
        /// </summary>
        public static string Measure {
            get {
                return ResourceManager.GetString("Measure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New [Ctrl+N] ähnelt.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step Forward [F7] ähnelt.
        /// </summary>
        public static string NextStep {
            get {
                return ResourceManager.GetString("NextStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open [Ctrl+O] ähnelt.
        /// </summary>
        public static string Open {
            get {
                return ResourceManager.GetString("Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation Matrix : ähnelt.
        /// </summary>
        public static string OperationMatrix {
            get {
                return ResourceManager.GetString("OperationMatrix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        public static string Output {
            get {
                return ResourceManager.GetString("Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Paste [Ctrl+V] ähnelt.
        /// </summary>
        public static string Paste {
            get {
                return ResourceManager.GetString("Paste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase Kick (Phase Shift) Gate ähnelt.
        /// </summary>
        public static string PhaseKick {
            get {
                return ResourceManager.GetString("PhaseKick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase Scale Gate ähnelt.
        /// </summary>
        public static string PhaseScale {
            get {
                return ResourceManager.GetString("PhaseScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die π ähnelt.
        /// </summary>
        public static string Pi {
            get {
                return ResourceManager.GetString("Pi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die π / 2 ähnelt.
        /// </summary>
        public static string Pi_2 {
            get {
                return ResourceManager.GetString("Pi_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die π / 3 ähnelt.
        /// </summary>
        public static string Pi_3 {
            get {
                return ResourceManager.GetString("Pi_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die π / 4 ähnelt.
        /// </summary>
        public static string Pi_4 {
            get {
                return ResourceManager.GetString("Pi_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die π / 6 ähnelt.
        /// </summary>
        public static string Pi_6 {
            get {
                return ResourceManager.GetString("Pi_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die π / 8 ähnelt.
        /// </summary>
        public static string Pi_8 {
            get {
                return ResourceManager.GetString("Pi_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pointer ähnelt.
        /// </summary>
        public static string Pointer {
            get {
                return ResourceManager.GetString("Pointer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step Back [F6] ähnelt.
        /// </summary>
        public static string PrevStep {
            get {
                return ResourceManager.GetString("PrevStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print ähnelt.
        /// </summary>
        public static string Print {
            get {
                return ResourceManager.GetString("Print", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probability ähnelt.
        /// </summary>
        public static string Probability {
            get {
                return ResourceManager.GetString("Probability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probability Scale ähnelt.
        /// </summary>
        public static string ProbabilityScale {
            get {
                return ResourceManager.GetString("ProbabilityScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Properties ähnelt.
        /// </summary>
        public static string Properties {
            get {
                return ResourceManager.GetString("Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quantum Fourier Transform ähnelt.
        /// </summary>
        public static string QFT {
            get {
                return ResourceManager.GetString("QFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Qubits ähnelt.
        /// </summary>
        public static string Qubits {
            get {
                return ResourceManager.GetString("Qubits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of new qubits ähnelt.
        /// </summary>
        public static string QubitsNumber {
            get {
                return ResourceManager.GetString("QubitsNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Relative ähnelt.
        /// </summary>
        public static string Relative {
            get {
                return ResourceManager.GetString("Relative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove Qubit from Register ähnelt.
        /// </summary>
        public static string RemoveQubit {
            get {
                return ResourceManager.GetString("RemoveQubit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart [F5] ähnelt.
        /// </summary>
        public static string Restart {
            get {
                return ResourceManager.GetString("Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotate X Gate ähnelt.
        /// </summary>
        public static string RotateX {
            get {
                return ResourceManager.GetString("RotateX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotate Y Gate ähnelt.
        /// </summary>
        public static string RotateY {
            get {
                return ResourceManager.GetString("RotateY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotate Z Gate ähnelt.
        /// </summary>
        public static string RotateZ {
            get {
                return ResourceManager.GetString("RotateZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run To End [F8] ähnelt.
        /// </summary>
        public static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run In Console ähnelt.
        /// </summary>
        public static string RunInConsole {
            get {
                return ResourceManager.GetString("RunInConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save [Ctrl+S] ähnelt.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save As... [Ctrl+Alt+S] ähnelt.
        /// </summary>
        public static string SaveAs {
            get {
                return ResourceManager.GetString("SaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Composite Gate... ähnelt.
        /// </summary>
        public static string SelectCompositeGate {
            get {
                return ResourceManager.GetString("SelectCompositeGate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected Composite Gate : ähnelt.
        /// </summary>
        public static string SelectedCompositeGate {
            get {
                return ResourceManager.GetString("SelectedCompositeGate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selection [Shift] (to move selected, press Shift+Ctrl) ähnelt.
        /// </summary>
        public static string Selection {
            get {
                return ResourceManager.GetString("Selection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected Method : ähnelt.
        /// </summary>
        public static string SelectMethod {
            get {
                return ResourceManager.GetString("SelectMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About QuIDE... ähnelt.
        /// </summary>
        public static string ShowAbout {
            get {
                return ResourceManager.GetString("ShowAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show All ähnelt.
        /// </summary>
        public static string ShowAll {
            get {
                return ResourceManager.GetString("ShowAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Calculator [Ctrl+K] ähnelt.
        /// </summary>
        public static string ShowCalculator {
            get {
                return ResourceManager.GetString("ShowCalculator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Only Non-Zero ähnelt.
        /// </summary>
        public static string ShowOnlyNonZero {
            get {
                return ResourceManager.GetString("ShowOnlyNonZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sigma X Gate (Not) ähnelt.
        /// </summary>
        public static string SigmaX {
            get {
                return ResourceManager.GetString("SigmaX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sigma Y Gate ähnelt.
        /// </summary>
        public static string SigmaY {
            get {
                return ResourceManager.GetString("SigmaY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sigma Z Gate ähnelt.
        /// </summary>
        public static string SigmaZ {
            get {
                return ResourceManager.GetString("SigmaZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Square Root of Not Gate ähnelt.
        /// </summary>
        public static string SqrtX {
            get {
                return ResourceManager.GetString("SqrtX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Amplitude of the state. It is a complex number, which squared magnitude gives the probability of the state. ähnelt.
        /// </summary>
        public static string StateAmplitude {
            get {
                return ResourceManager.GetString("StateAmplitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probability of the state. The bar&apos;s length represents probability value. Color represents the phase of state&apos;s amplitude (which is complex number). ähnelt.
        /// </summary>
        public static string StateProbability {
            get {
                return ResourceManager.GetString("StateProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die State binary representation ähnelt.
        /// </summary>
        public static string StateQubits {
            get {
                return ResourceManager.GetString("StateQubits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die States Visibility ähnelt.
        /// </summary>
        public static string StatesVisibility {
            get {
                return ResourceManager.GetString("StatesVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decimal value of the state ähnelt.
        /// </summary>
        public static string StateValue {
            get {
                return ResourceManager.GetString("StateValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Build Circuit ähnelt.
        /// </summary>
        public static string ToCircuit {
            get {
                return ResourceManager.GetString("ToCircuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To Code ähnelt.
        /// </summary>
        public static string ToCode {
            get {
                return ResourceManager.GetString("ToCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ungroup ähnelt.
        /// </summary>
        public static string Ungroup {
            get {
                return ResourceManager.GetString("Ungroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ungroup Composite Gate ähnelt.
        /// </summary>
        public static string UngroupTip {
            get {
                return ResourceManager.GetString("UngroupTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom Unitary Gate ähnelt.
        /// </summary>
        public static string Unitary {
            get {
                return ResourceManager.GetString("Unitary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        public static string Value {
            get {
                return ResourceManager.GetString("Value", resourceCulture);
            }
        }
    }
}
