<!--
    This file is part of QuIDE.

    QuIDE - The Quantum IDE
    Copyright (C) 2014  Joanna Patrzyk, Bartłomiej Patrzyk

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see<http://www.gnu.org/licenses/> .
 -->

<UserControl x:Class="QuIDE.Controls.OutputGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:QuIDE.Properties"
    xmlns:ViewModels="clr-namespace:QuIDE.ViewModels"
    xmlns:Controls="clr-namespace:QuIDE.Controls"
    xmlns:Helpers="clr-namespace:QuIDE.Helpers"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="DefaultButton" TargetType="Button" >
        </Style>
        <Style x:Key="FlatComboBox" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" TargetType="ComboBox" />
        <Helpers:AmplitudeColorConverter x:Key="AmplitudeToColor" />
        <Helpers:ComplexConverter x:Key="ComplexToString" />
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" Background="White"
          d:DataContext="{Binding Source={d:DesignInstance Type=ViewModels:OutputGridVM, IsDesignTimeCreatable=True}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Vertical">
            <Border
                BorderBrush="LightGray"
                BorderThickness="1"
                Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Margin="2"
                        VerticalAlignment="Center"
                    Text="Output from register:" />
                    <ComboBox
                        x:Name="registerBox"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                Margin="2"
                IsEditable="True"
                IsReadOnly="False"
                        ItemsSource="{Binding RegistersNames}"
                        SelectedIndex="0"
                KeyUp="registerBox_KeyUp"
                        DropDownClosed="registerBox_DropDownClosed">
                    </ComboBox>
                </Grid>
            </Border>
            <GroupBox Header="{x:Static p:Resources.StatesVisibility}" Margin="2">
                <StackPanel Orientation="Horizontal">
                    <RadioButton GroupName="StatesVisibilityMode"
                                 Content="{x:Static p:Resources.ShowAll}"
                                 Margin="10,2"
                                 IsChecked="{Binding ShowAll, Mode=TwoWay}" />
                    <RadioButton GroupName="StatesVisibilityMode"
                                 Content="{x:Static p:Resources.ShowOnlyNonZero}"
                                 Margin="10,2"
                                 IsChecked="True" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="{x:Static p:Resources.ProbabilityScale}" Margin="2">
                <StackPanel Orientation="Horizontal">
                    <RadioButton GroupName="ScaleMode"
                                 Content="{x:Static p:Resources.Absolute}"
                                 Margin="10,2"
                                 IsChecked="True" />
                    <RadioButton GroupName="ScaleMode"
                                 Content="{x:Static p:Resources.Relative}"
                                 Margin="10,2"
                                 IsChecked="{Binding ScaleRelative, Mode=TwoWay}" />
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <Border Grid.Row="1"
            Background="White" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
            <ListView x:Name="statesList" 
                      ItemsSource="{Binding States}"
                      Background="White" Margin="0"
                      SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                      GotFocus="statesList_GotFocus">
                <ListView.View>
                    <GridView AllowsColumnReorder="True">
                        <GridViewColumn
                                Width="40">
                            <GridViewColumnHeader
                                Content="{x:Static p:Resources.Value}"
                                Tag="Value"
                                Click="SortValue_Click"/>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding Path=Value, StringFormat='|\{0\}>'}"
                                        ToolTip="{x:Static p:Resources.StateValue}">
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn 
                                Width="Auto">
                            <GridViewColumnHeader
                                Content="{x:Static p:Resources.Qubits}"/>
                            <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock 
                                        Text="{Binding Path=Representation}"
                                        ToolTip="{x:Static p:Resources.StateQubits}">
                                </TextBlock>
                            </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn
                                Width="140">
                            <GridViewColumnHeader
                                Content="{x:Static p:Resources.Probability}"
                                Tag="Probability"
                                Click="SortProbability_Click"/>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid Margin="0" Width="{Binding Path=RectangleMaxWidth}">
                                        <Rectangle Fill="{Binding Amplitude, Converter={StaticResource AmplitudeToColor}}"
                                       RadiusX="2" RadiusY="2" Stroke="DimGray"
                                       Height="20" Width="{Binding Path=RectangleWidth}"
                                                   Margin="0" HorizontalAlignment="Left">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                                    <GradientStop Color="#33000000"/>
                                                    <GradientStop Color="White" Offset="0.5"/>
                                                    <GradientStop Color="#4C000000" Offset="1"/>
                                                    <GradientStop Color="#99FFFFFF" Offset="0.25"/>
                                                    <GradientStop Color="#B2FFFFFF" Offset="0.75"/>
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <TextBlock Text="{Binding Path=ProbabilityFloat, StringFormat='P = \{0\}'}" 
                                           Width="{Binding Path=RectangleMaxWidth}" 
                                           TextAlignment="Left" Margin="5,0,0,0"
                                                   ToolTip="{x:Static p:Resources.StateProbability}">
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn 
                                Header="{x:Static p:Resources.Amplitude}" 
                                Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock 
                                        Text="{Binding Path=Amplitude, Converter={StaticResource ComplexToString}}"
                                        ToolTip="{x:Static p:Resources.StateAmplitude}">
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Border>
    </Grid>
</UserControl>
